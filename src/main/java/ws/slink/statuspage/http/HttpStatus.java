package ws.slink.statuspage.http;

public enum HttpStatus {

     NONE(0)
    ,CONTINUE(100)
    ,SWITCHING(101)
    ,PROCESSING(102)
    ,EARLY_HINTS(103)

    ,OK(200)
    ,CREATED(201)
    ,ACCEPTED(202)
    ,NON_AUTHERITATIVE(203)
    ,NO_CONTENT(204)
    ,RESET_CONTENT(205)
    ,PARTIAL_CONTENT(206)
    ,MULTI_STATUS(207)
    ,IM_USED(226)

    ,MULTIPLE_CHOICES(300)
    ,MOVED_PERMANENTLY(301)
    ,MOVED_TEMPORARYLY(302)
    ,FOUND(302)
    ,SEE_OTHER(303)
    ,NOT_MODIFIED(304)
    ,USE_PROXY(305)
    ,TEMPORARY_REDIRECT(307)
    ,PERMANENT_REDIRECRT(308)


    ,BAD_REQUEST(400)
    ,UNAUTHORIZED(401)
    ,PAYMENT_REQUIRED(402)
    ,FORBIDDEN(403)
    ,NOT_FOUND(404)
    ,METHOD_NOT_ALLOWED(405)
    ,NOT_ACCEPTABLE(406)
    ,PROXY_AUTHENTICATION_REQUIRED(407)
    ,REQUEST_TIMEOUT(408)
    ,CONFLICT(409)
    ,GONE(410)
    ,LENGTH_REQUIRED(411)
    ,PRECONDITION_FAILED(412)
    ,PAYLOAD_TOO_LARGE(413)
    ,URI_TOO_LONG(414)
    ,UNSUPPORTED_MEDIA_TYPE(415)
    ,RANGE_NOT_SATISFIABLE(416)
    ,EXPECTATAION_FAILED(417)
    ,I_AM_A_TEAPOT(418)
    ,AUTHENTICATION_TIMEOUT(419)
    ,MISDIRECTED_REQUEST(421)
    ,UNPROCESSABLE_ENTITY(422)
    ,LOCKED(423)
    ,FAILED_DEPENDENCY(424)
    ,TOO_EARLY(425)
    ,UPGRADE_REQUIRED(426)
    ,PRECONDITION_REQUIRED(428)
    ,TOO_MANY_REQUESTS(429)
    ,REQUEST_HEADER_FIELD_TOO_LARGE(431)
    ,RETRY_WITH(449)
    ,UNAVAILABLE_FOR_LEGAL_REASONS(451)
    ,CLIENT_CLOSED_REQUEST(499)

    ,INTERNAL_SERVER_ERROR(500)
    ,NOT_IMPLEMENTED(501)
    ,BAD_GATEWAY(502)
    ,SERVICE_UNAVAILABLE(503)
    ,GATEWAY_TIMEOUT(504)
    ,HTTP_VERSION_NOT_SUPPORTED(505)
    ,VARIANT_ALSO_NEGOTIATES(506)
    ,INSUFFICIENT_STORAGE(507)
    ,LOOP_DETECTED(508)
    ,BANDWIDTH_LIMIT_EXCEEDED(509)
    ,NOT_EXTENDED(510)
    ,NETWORK_AUTHENTICATION_REQUIRED(511)
    ,UNKNOWN_ERROR(520)
    ,WEB_SERVER_IS_DOWN(521)
    ,CONNECTION_TIMED_OUT(522)
    ,ORIGIN_IS_UNREACHABLE(523)
    ,TIMEOUT_OCCURRED(524)
    ,SSH_HANDSHAKE_FAILED(525)
    ,INVALID_SSL_CERTIFICATE(526)
    ;

    private int value;
    HttpStatus(int value) {
        this.value = value;
    }
    public int code() {
        return this.value;
    }
    public String message() {
        return this.toString().replaceAll("_", " ");
    }
    public static HttpStatus of(int input){
        for(HttpStatus v : values()){
            if( v.code() == input ){
                return v;
            }
        }
        return NONE;
    }

}
